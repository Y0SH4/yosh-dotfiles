# GENERAL SETTINGS START HERE {{{
set -g default-terminal "xterm-256color" # Works better with macOS terminal
set -sg escape-time 10                   # Small delay for smoother key sequences
set -g history-limit 50000               # Keep large scrollback history
set -s buffer-limit 20                   # Maximum buffers
set -g display-time 1500                 # Status message display time
setw -g remain-on-exit off               # Destroy window when program exits
set -g repeat-time 1000                  # Repeat command delay time
setw -g automatic-rename on              # Auto rename windows
setw -g automatic-rename-format '#{pane_current_command}'
setw -g allow-rename off                        # Disallow programs to rename windows
setw -g xterm-keys on                           # Enable xterm style keys
set -g mouse on                                 # Enable mouse
set -g status-keys vi                           # Vi-style keybindings
setw -g mode-keys vi                            # Vi-style mode keys
set -g base-index 1                             # Windows start from 1
set -g pane-base-index 1                        # Panes start from 1
setw -g aggressive-resize on                    # Resize smaller clients
set -ga terminal-overrides ",xterm-256color:Tc" # Fixed terminal override command
set-option -g focus-events on
# GENERAL SETTINGS END HERE }}}

# KEYBINDING SETTINGS START HERE {{{
# Unbind default key bindings
unbind C-b # Unbind default prefix (CTRL + B)

# Now set custom key bindings for both CTRL + A and Alt + A as prefixes
set -g prefix C-a       # Use CTRL + A as prefix
bind C-a send-prefix    # Bind CTRL + A as prefix in nested tmux sessions
bind -n M-a send-prefix # Bind Alt + A as an additional prefix

# Reload configuration
bind M-r source-file $HOME/.tmux.conf \; display 'Tmux Reloaded' # Alt + r to reload config

# Splitting windows
bind M-s split-window -h # Alt + s to split horizontally
bind M-v split-window -v # Alt + v to split vertically

# Renaming windows and sessions
bind r command-prompt -I'#W' "rename-window -- '%%'"  # r to rename current window
bind R command-prompt -I'#S' "rename-session -- '%%'" # R to rename current session

# Pane navigation
bind -r h select-pane -L # Move left
bind -r j select-pane -D # Move down
bind -r k select-pane -U # Move up
bind -r l select-pane -R # Move right
bind > swap-pane -D       # Swap with next pane
bind < swap-pane -U       # Swap with previous pane

# Resizing panes
bind -r H resize-pane -L 2 # Resize left
bind -r J resize-pane -D 2 # Resize down
bind -r K resize-pane -U 2 # Resize up
bind -r L resize-pane -R 2 # Resize right

# Window navigation
bind -r M-n next-window     # Alt + n to move to the next window
bind -r M-p previous-window # Alt + p to move to the previous window
bind -r Tab next-window     # Tab to move to the next window

# Pane/window management
bind S choose-window "join-pane -v -t '%%'" # S to join pane to selected window (horizontal split)
bind V choose-window "join-pane -h -t '%%'" # V to join pane to selected window (vertical split)

# Closing panes and windows
bind x kill-pane                                                       # x to close pane
bind X kill-window                                                     # X to close window
bind M-x confirm-before -p"kill other windows? (y/n)" "kill-window -a" # Alt + x to close other windows

# Copying and pasting
bind a copy-mode     # a to enter copy mode
bind p paste-buffer  # p to paste from buffer
bind P choose-buffer # Alt + p to choose buffer for pasting

# Copy mode keybindings
bind -T copy-mode-vi v send -X begin-selection           # v to start selection in copy mode
bind -T copy-mode-vi M-v send -X rectangle-toggle        # Alt + v to toggle rectangle selection
bind -T copy-mode-vi y send -X copy-selection-and-cancel # y to yank selection
bind -T copy-mode-vi Y send -X copy-line                 # Y to yank a line
bind -T copy-mode-vi Escape send -X cancel               # Esc to exit copy mode

# macOS clipboard handling with pbcopy
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi Y send -X copy-line \; run "tmux save-buffer - | pbcopy"
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"

# KEYBINDING SETTINGS END HERE }}}

# APPEARANCE SETTINGS START HERE {{{
# Default value for statusline format, set it up in custom config file if you want
POWERLINE_SEPARATOR_LEFT=""
POWERLINE_SEPARATOR_RIGHT=""
POWERLINE_SESSION_ICON="  "
POWERLINE_USER_ICON=" "
POWERLINE_WINDOW_ACTIVE_ICON=" "
POWERLINE_CLOCK_ICON=" "
POWERLINE_LOGO="    "
BLACK="colour235"
RED="colour9"
GREEN="colour2"
YELLOW="colour11"
BLUE="colour12"
PURPLE="colour5"
WHITE="colour15"

set -g set-titles on                                      # Set terminal title
set -g set-titles-string "❐ Tmux #{version} [#S] #I ➤ #W" # Terminal title bar format
setw -g mode-style "fg=$WHITE,bg=$BLUE"                   # Window mode style
set -g message-style "fg=$WHITE,bold,bg=$GREEN"           # Status line message style
set -g message-command-style "fg=$BLACK,bold,bg=$BLUE"    # Status line message command style
set -g status on                                          # Show or hide status line
set -g status-interval 1                                  # Update status line every interval second
set -g status-justify left                                # Set the position of the window list component of status line
set -g status-position bottom                             # Set the position of status line
setw -g clock-mode-colour "$YELLOW"                       # Set clock color
setw -g clock-mode-style 12                               # Set clock hour format
setw -g window-status-activity-style "fg=$RED"            # Window with activity alert style
setw -g window-status-separator ""                        # Set the separator drawn between windows in status line
set -g status-left-length 100                             # Set the maximum length of left status line
set -g status-right-length 100                            # Set the maximum length of right status line
set -g status-style "bg=$BLACK"                           # Status line style
setw -g pane-border-status off                            # Pane border status line
setw -g pane-border-style "fg=$BLUE"                      # Pane border style
setw -g pane-active-border-style "fg=$RED"                # Active pane border style

# Left status line configurations
set -g status-left "#[fg=$BLACK,bold,bg=$BLUE] $POWERLINE_SESSION_ICON#S #[fg=$BLUE,bg=$YELLOW]$POWERLINE_SEPARATOR_RIGHT#[fg=$BLACK,bold] $POWERLINE_USER_ICON#(whoami) #[fg=$YELLOW,bg=$GREEN]$POWERLINE_SEPARATOR_RIGHT#[fg=$BLACK,bold]$POWERLINE_LOGO#[fg=$GREEN,bg=$BLACK]$POWERLINE_SEPARATOR_RIGHT"

# Right status line configurations
set -g status-right "#[fg=$BLUE,bg=$BLACK]$POWERLINE_SEPARATOR_LEFT#[fg=$BLACK,bold,bg=$BLUE] #T$POWERLINE_COMMAND_ICON #[fg=$PURPLE,bg=$BLUE]$POWERLINE_SEPARATOR_LEFT#[fg=$BLACK,bold,bg=$PURPLE] %a,%d %b %y | %I:%M %p$POWERLINE_CLOCK_ICON "

# Window status line configurations
setw -g window-status-current-format "#[fg=$BLUE,bg=$BLACK] #I #[fg=$BLACK,bold,bg=$BLUE]$POWERLINE_SEPARATOR_RIGHT $POWERLINE_WINDOW_ACTIVE_ICON#W #[fg=$BLUE,bg=$BLACK]$POWERLINE_SEPARATOR_RIGHT"
setw -g window-status-format "#[fg=$WHITE,bg=$BLACK] #I $POWERLINE_SEPARATOR_RIGHT_THIN $POWERLINE_WINDOW_ICON#W $POWERLINE_SEPARATOR_RIGHT_THIN"
# APPEARANCE SETTINGS END HERE }}}

# Use user defined overrides if .tmux.conf.local file is found
if-shell "[ -f ~/.tmux.conf.local ]" "source ~/.tmux.conf.local"
